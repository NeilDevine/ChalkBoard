#BlueJ class context
comment0.params=d
comment0.target=Node(java.lang.String)
comment1.params=d\ p
comment1.target=Node(java.lang.String,\ Node)
comment10.params=in
comment10.target=Div\ divide(Node)
comment11.params=in
comment11.target=Exp\ power(Node)
comment12.params=in
comment12.target=Node\ addChild(Node)
comment13.params=in
comment13.target=void\ addChildren(java.util.ArrayList)
comment14.params=i
comment14.target=Node\ childAt(int)
comment15.params=i
comment15.target=Node\ removeAt(int)
comment16.params=a
comment16.target=boolean\ removeChild(Node)
comment17.params=a
comment17.target=boolean\ is(java.lang.String)
comment18.params=
comment18.target=java.lang.String\ toString()
comment19.params=
comment19.target=Node\ recNegateN()
comment2.params=
comment2.target=java.lang.Integer\ getPrec()
comment20.params=
comment20.target=boolean\ recSubtraction()
comment21.params=
comment21.target=Node\ recSimplifyRationalN()
comment22.params=rootNode
comment22.target=Node\ recCopy(Node)
comment23.params=
comment23.target=Node\ removeConstants()
comment24.params=
comment24.target=Node\ removeConstant()
comment25.params=
comment25.target=Node\ foldConstants()
comment26.params=in
comment26.target=boolean\ structureEquals(Node)
comment27.params=
comment27.target=Node\ levelN()
comment28.params=
comment28.target=Node\ combineTermsN()
comment29.params=
comment29.target=Node\ setupN()
comment3.params=
comment3.target=boolean\ isVal()
comment30.params=
comment30.target=Node\ simplifyN()
comment31.params=
comment31.target=Node\ recExpand()
comment4.params=
comment4.target=boolean\ isOp()
comment5.params=
comment5.target=boolean\ isVar()
comment6.params=in
comment6.target=Add\ add(Node)
comment7.params=in
comment7.target=Mult\ multiply(Node)
comment8.params=index\ toReplace
comment8.target=void\ replaceChildAt(int,\ Node)
comment9.params=oldChild\ newChild
comment9.target=void\ replaceChild(Node,\ Node)
numComments=32
