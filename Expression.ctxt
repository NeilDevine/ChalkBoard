#BlueJ class context
comment0.params=e
comment0.target=Expression(java.lang.String[])
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Exression\r\n\ Note\:\ This\ constructor\ can\ be\ made\ more\ efficient\ (possibly\ to\ O(N)\ time)\r\n
comment1.params=e
comment1.target=Node\ fillTree(java.lang.String[])
comment10.params=r\ steps
comment10.target=Value\ recCalculate(Node,\ boolean)
comment11.params=
comment11.target=boolean\ expand()
comment11.text=\r\n\ Expands\ a\ given\ expression\r\n\ \r\n\ @return\ \ \ Whether\ any\ changes\ were\ possible\r\n
comment12.params=r
comment12.target=boolean\ recursiveExpand(Node)
comment13.params=r
comment13.target=boolean\ recSubtraction(Node)
comment14.params=
comment14.target=Expression\ copy()
comment15.params=rootNode
comment15.target=Node\ recCopy(Node)
comment16.params=a
comment16.target=Node\ node(java.lang.String)
comment17.params=
comment17.target=void\ test()
comment2.params=
comment2.target=Node\ getRoot()
comment3.params=r
comment3.target=void\ setRoot(Node)
comment4.params=
comment4.target=Expression()
comment5.params=rootNode
comment5.target=Expression(Node)
comment6.params=e
comment6.target=java.lang.String[]\ parse(java.lang.String)
comment7.params=e
comment7.target=int\ rootIndex(java.lang.String[])
comment8.params=op
comment8.target=java.lang.Integer\ getPrec(java.lang.String)
comment9.params=steps
comment9.target=double\ calculate(boolean)
comment9.text=\r\n\ A\ calculate\ function\ which\ can\ also\ show\ the\ steps\ of\ the\ calculation\r\n
numComments=18
